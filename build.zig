const std = @import("std");

pub fn build(b: *std.Build) !void {
    const target = b.standardTargetOptions(.{});
    const optimize = b.standardOptimizeOption(.{});

    const version: std.SemanticVersion = .{
        .major = 0,
        .minor = 7,
        .patch = 0,
    };
    const conf = config(b, version, target);

    const lib = b.addStaticLibrary(.{
        .name = "relic",
        .target = target,
        .optimize = optimize,
    });
    lib.addIncludePath(.{ .path = "include" });
    lib.addIncludePath(.{ .path = "include/low" });
    lib.addIncludePath(.{ .path = "src" });
    lib.addIncludePath(.{ .path = "src/tmpl" });
    lib.addConfigHeader(conf);
    lib.addIncludePath(.{ .path = conf.include_path });
    if (optimize == .Debug)
        lib.omit_frame_pointer = false
    else
        lib.omit_frame_pointer = true;
    lib.addCSourceFiles(src, cflags);
    if (target.getCpuArch() == .x86_64) {
        lib.addAssemblyFile(.{ .path = "src/low/x64-asm-6l/relic_fp_smb_low.s" });
        lib.addAssemblyFile(.{ .path = "src/low/x64-asm-5l/macro.s" });
        lib.addAssemblyFile(.{ .path = "src/low/x64-asm-6l/macro.s" });
        lib.addAssemblyFile(.{ .path = "src/low/x64-asm-7l/macro.s" });
        lib.addAssemblyFile(.{ .path = "src/low/x64-asm-8l/macro.s" });
        lib.addAssemblyFile(.{ .path = "src/low/x64-asm-8.5l/macro.s" });
        lib.addAssemblyFile(.{ .path = "src/low/x64-asm-9l/macro.s" });
        lib.addAssemblyFile(.{ .path = "src/low/x64-asm-10l/macro.s" });
        lib.addAssemblyFile(.{ .path = "src/low/x64-asm-12l/macro.s" });
    }
    lib.addCSourceFiles(switch (target.getCpuArch()) {
        .avr => &.{
            "src/arch/relic_arch_avr.c",
            "src/low/arm-asm-254/relic_fp_add_low.c",
            "src/low/arm-asm-254/relic_fp_mul_low.c",
            "src/low/arm-asm-254/relic_fp_rdc_low.c",
            "src/low/avr-asm-158/relic_bn_shift_low.c",
            "src/low/avr-asm-158/relic_fp_add_low.c",
            "src/low/avr-asm-158/relic_fp_mul_low.c",
            "src/low/avr-asm-158/relic_fp_rdc_low.c",
            "src/low/avr-asm-158/relic_fp_shift_low.c",
            "src/low/avr-asm-158/relic_fp_sqr_low.c",
            "src/low/avr-asm-163/relic_bn_shift_low.c",
            "src/low/avr-asm-163/relic_fb_add_low.c",
            "src/low/avr-asm-163/relic_fb_mul_low.c",
            "src/low/avr-asm-163/relic_fb_shift_low.c",
            "src/low/avr-asm-163/relic_fb_sqr_low.c",
        },
        .aarch64 => &.{
            "src/arch/relic_arch_a64.c",
        },
        .arm => &.{
            "src/arch/relic_arch_arm.c",
        },
        .msp430 => &.{
            "src/arch/relic_arch_msp.c",
            "src/low/msp-asm/relic_bn_add_low.c",
            "src/low/msp-asm/relic_bn_shift_low.c",
            "src/low/msp-asm/relic_fb_add_low.c",
            "src/low/msp-asm/relic_fb_mul_low.c",
            "src/low/msp-asm/relic_fb_rdc_low.c",
            "src/low/msp-asm/relic_fb_shift_low.c",
            "src/low/msp-asm/relic_fb_sqr_low.c",
            "src/low/msp-asm/relic_fb_srt_low.c",
            "src/low/msp-asm/relic_fp_add_low.c",
            "src/low/msp-asm/relic_fp_inv_low.c",
            "src/low/msp-asm/relic_fp_mul_low.c",
            "src/low/msp-asm/relic_fpx_add_low.c",
        },
        .x86_64 => &.{
            "src/arch/relic_arch_x64.c",
            "src/low/x64-asm-10l/relic_fp_mul_low.c",
            "src/low/x64-asm-10l/relic_fp_rdc_low.c",
            "src/low/x64-asm-10l/relic_fp_sqr_low.c",
            "src/low/x64-asm-10l/relic_fpx_rdc_low.c",
            "src/low/x64-asm-12l/relic_fp_mul_low.c",
            "src/low/x64-asm-12l/relic_fp_rdc_low.c",
            "src/low/x64-asm-12l/relic_fp_sqr_low.c",
            "src/low/x64-asm-12l/relic_fpx_rdc_low.c",
            "src/low/x64-asm-4l/relic_fp_inv_low.c",
            "src/low/x64-asm-4l/relic_fp_mul_low.c",
            "src/low/x64-asm-4l/relic_fp_rdc_low.c",
            "src/low/x64-asm-4l/relic_fp_shift_low.c",
            "src/low/x64-asm-4l/relic_fp_sqr_low.c",
            "src/low/x64-asm-4l/relic_fpx_add_low.c",
            "src/low/x64-asm-4l/relic_fpx_mul_low.c",
            "src/low/x64-asm-4l/relic_fpx_rdc_low.c",
            "src/low/x64-asm-4l/relic_fpx_sqr_low.c",
            "src/low/x64-asm-5l/relic_fp_inv_low.c",
            "src/low/x64-asm-5l/relic_fp_mul_low.c",
            "src/low/x64-asm-5l/relic_fp_rdc_low.c",
            "src/low/x64-asm-5l/relic_fp_shift_low.c",
            "src/low/x64-asm-5l/relic_fp_smb_low.c",
            "src/low/x64-asm-5l/relic_fp_sqr_low.c",
            "src/low/x64-asm-6l/relic_bn_mul_low.c",
            "src/low/x64-asm-6l/relic_bn_shift_low.c",
            "src/low/x64-asm-6l/relic_fp_inv_low.c",
            "src/low/x64-asm-6l/relic_fp_mul_low.c",
            "src/low/x64-asm-6l/relic_fp_rdc_low.c",
            "src/low/x64-asm-6l/relic_fp_shift_low.c",
            // "src/low/x64-asm-6l/relic_fp_smb_low.c",
            "src/low/x64-asm-6l/relic_fp_sqr_low.c",
            "src/low/x64-asm-7l/relic_fp_inv_low.c",
            "src/low/x64-asm-7l/relic_fp_mul_low.c",
            "src/low/x64-asm-7l/relic_fp_rdc_low.c",
            "src/low/x64-asm-7l/relic_fp_shift_low.c",
            "src/low/x64-asm-7l/relic_fp_sqr_low.c",
            "src/low/x64-asm-8.5l/relic_fp_mul_low.c",
            "src/low/x64-asm-8.5l/relic_fp_rdc_low.c",
            "src/low/x64-asm-8.5l/relic_fp_sqr_low.c",
            "src/low/x64-asm-8.5l/relic_fpx_add_low.c",
            "src/low/x64-asm-8.5l/relic_fpx_mul_low.c",
            "src/low/x64-asm-8.5l/relic_fpx_rdc_low.c",
            "src/low/x64-asm-8.5l/relic_fpx_sqr_low.c",
            "src/low/x64-asm-8l/relic_bn_mul_low.c",
            "src/low/x64-asm-8l/relic_fp_inv_low.c",
            "src/low/x64-asm-8l/relic_fp_mul_low.c",
            "src/low/x64-asm-8l/relic_fp_rdc_low.c",
            "src/low/x64-asm-8l/relic_fp_shift_low.c",
            "src/low/x64-asm-8l/relic_fp_sqr_low.c",
            "src/low/x64-asm-9l/relic_fp_mul_low.c",
            "src/low/x64-asm-9l/relic_fp_rdc_low.c",
            "src/low/x64-asm-9l/relic_fp_smb_low.c",
            "src/low/x64-asm-9l/relic_fp_sqr_low.c",
            "src/low/x64-asm-9l/relic_fpx_rdc_low.c",
            "src/low/x64-fiat-381/bls12_381_q2_64.c",
            // "src/low/x64-fiat-381/bls12_381_q2_bedrock.c",
            "src/low/x64-fiat-381/bls12_381_q_64.c",
            "src/low/x64-fiat-381/relic_fp_add_low.c",
            "src/low/x64-fiat-381/relic_fp_inv_low.c",
            "src/low/x64-fiat-381/relic_fp_mul_low.c",
            "src/low/x64-fiat-381/relic_fp_rdc_low.c",
            "src/low/x64-fiat-381/relic_fp_sqr_low.c",
            // "src/low/x64-fiat-381/relic_fpx_add_low.c",
            // "src/low/x64-fiat-381/relic_fpx_mul_low.c",
            // "src/low/x64-fiat-381/relic_fpx_sqr_low.c",
            "src/low/x64-hacl-25519/relic_fp_add_low.c",
            "src/low/x64-hacl-25519/relic_fp_inv_low.c",
            "src/low/x64-hacl-25519/relic_fp_mul_low.c",
            "src/low/x64-hacl-25519/relic_fp_sqr_low.c",
            "src/rand/relic_rand_core.c",
            "src/rand/relic_rand_rdrnd.c",
        },
        .x86 => &.{
            "src/arch/relic_arch_x86.c",
            "src/rand/relic_rand_core.c",
            "src/rand/relic_rand_rdrnd.c",
        },
        else => &.{
            "src/arch/relic_arch_none.c",
        },
    }, cflags);
    lib.linkSystemLibrary("gmp");
    lib.linkLibC();
    lib.installHeadersDirectoryOptions(.{
        .source_dir = .{ .path = "include" },
        .install_dir = .header,
        .install_subdir = "",
        .exclude_extensions = &.{"in"},
    });
    b.installArtifact(lib);
}

const cflags = &.{
    "-std=gnu99",
    "-Wall",
    "-Wextra",
    "-funroll-loops",
    "-Wpedantic",
    "-Wshadow",
};
const src = &.{
    "src/bc/relic_bc_aes.c",
    "src/bc/rijndael-alg-fst.c",
    "src/bc/rijndael-api-fst.c",
    "src/bn/relic_bn_add.c",
    "src/bn/relic_bn_cmp.c",
    "src/bn/relic_bn_div.c",
    "src/bn/relic_bn_factor.c",
    "src/bn/relic_bn_gcd.c",
    "src/bn/relic_bn_inv.c",
    "src/bn/relic_bn_lag.c",
    "src/bn/relic_bn_lcm.c",
    "src/bn/relic_bn_mem.c",
    "src/bn/relic_bn_mod.c",
    "src/bn/relic_bn_mul.c",
    "src/bn/relic_bn_mxp.c",
    "src/bn/relic_bn_mxp_sim.c",
    "src/bn/relic_bn_prime.c",
    "src/bn/relic_bn_rec.c",
    "src/bn/relic_bn_shift.c",
    "src/bn/relic_bn_smb.c",
    "src/bn/relic_bn_sqr.c",
    "src/bn/relic_bn_srt.c",
    "src/bn/relic_bn_util.c",
    "src/cp/relic_cp_bbs.c",
    "src/cp/relic_cp_bdpe.c",
    "src/cp/relic_cp_bgn.c",
    "src/cp/relic_cp_bls.c",
    "src/cp/relic_cp_cls.c",
    "src/cp/relic_cp_cmlhs.c",
    "src/cp/relic_cp_ecdh.c",
    "src/cp/relic_cp_ecdsa.c",
    "src/cp/relic_cp_ecies.c",
    "src/cp/relic_cp_ecmqv.c",
    "src/cp/relic_cp_ecss.c",
    "src/cp/relic_cp_ers.c",
    "src/cp/relic_cp_etrs.c",
    "src/cp/relic_cp_ghpe.c",
    "src/cp/relic_cp_ibe.c",
    "src/cp/relic_cp_mklhs.c",
    "src/cp/relic_cp_mpss.c",
    "src/cp/relic_cp_pbpsi.c",
    "src/cp/relic_cp_pcdel.c",
    "src/cp/relic_cp_phpe.c",
    "src/cp/relic_cp_pok.c",
    "src/cp/relic_cp_pss.c",
    "src/cp/relic_cp_rabin.c",
    "src/cp/relic_cp_rsa.c",
    "src/cp/relic_cp_rsapsi.c",
    "src/cp/relic_cp_shipsi.c",
    "src/cp/relic_cp_shpe.c",
    "src/cp/relic_cp_smlers.c",
    "src/cp/relic_cp_sok.c",
    "src/cp/relic_cp_sokaka.c",
    "src/cp/relic_cp_vbnn.c",
    "src/cp/relic_cp_zss.c",
    "src/dv/relic_dv_mem.c",
    "src/dv/relic_dv_util.c",
    "src/eb/relic_eb_add.c",
    "src/eb/relic_eb_cmp.c",
    "src/eb/relic_eb_curve.c",
    "src/eb/relic_eb_dbl.c",
    "src/eb/relic_eb_frb.c",
    "src/eb/relic_eb_hlv.c",
    "src/eb/relic_eb_map.c",
    "src/eb/relic_eb_mul.c",
    "src/eb/relic_eb_mul_fix.c",
    "src/eb/relic_eb_mul_sim.c",
    "src/eb/relic_eb_neg.c",
    "src/eb/relic_eb_norm.c",
    "src/eb/relic_eb_param.c",
    "src/eb/relic_eb_pck.c",
    "src/eb/relic_eb_util.c",
    "src/ed/relic_ed_add.c",
    "src/ed/relic_ed_cmp.c",
    "src/ed/relic_ed_curve.c",
    "src/ed/relic_ed_dbl.c",
    "src/ed/relic_ed_map.c",
    "src/ed/relic_ed_mul.c",
    "src/ed/relic_ed_mul_fix.c",
    "src/ed/relic_ed_mul_sim.c",
    "src/ed/relic_ed_neg.c",
    "src/ed/relic_ed_norm.c",
    "src/ed/relic_ed_param.c",
    "src/ed/relic_ed_pck.c",
    "src/ed/relic_ed_util.c",
    "src/ep/relic_ep_add.c",
    "src/ep/relic_ep_cmp.c",
    "src/ep/relic_ep_curve.c",
    "src/ep/relic_ep_dbl.c",
    "src/ep/relic_ep_map.c",
    "src/ep/relic_ep_mul.c",
    "src/ep/relic_ep_mul_cof.c",
    "src/ep/relic_ep_mul_fix.c",
    "src/ep/relic_ep_mul_sim.c",
    "src/ep/relic_ep_neg.c",
    "src/ep/relic_ep_norm.c",
    "src/ep/relic_ep_param.c",
    "src/ep/relic_ep_pck.c",
    "src/ep/relic_ep_psi.c",
    "src/ep/relic_ep_util.c",
    "src/epx/relic_ep2_add.c",
    "src/epx/relic_ep2_cmp.c",
    "src/epx/relic_ep2_curve.c",
    "src/epx/relic_ep2_dbl.c",
    "src/epx/relic_ep2_frb.c",
    "src/epx/relic_ep2_map.c",
    "src/epx/relic_ep2_mul.c",
    "src/epx/relic_ep2_mul_cof.c",
    "src/epx/relic_ep2_mul_fix.c",
    "src/epx/relic_ep2_mul_sim.c",
    "src/epx/relic_ep2_neg.c",
    "src/epx/relic_ep2_norm.c",
    "src/epx/relic_ep2_pck.c",
    "src/epx/relic_ep2_util.c",
    "src/epx/relic_ep3_add.c",
    "src/epx/relic_ep3_cmp.c",
    "src/epx/relic_ep3_curve.c",
    "src/epx/relic_ep3_dbl.c",
    "src/epx/relic_ep3_frb.c",
    "src/epx/relic_ep3_map.c",
    "src/epx/relic_ep3_mul.c",
    "src/epx/relic_ep3_mul_cof.c",
    "src/epx/relic_ep3_mul_fix.c",
    "src/epx/relic_ep3_mul_sim.c",
    "src/epx/relic_ep3_neg.c",
    "src/epx/relic_ep3_norm.c",
    "src/epx/relic_ep3_util.c",
    "src/epx/relic_ep4_add.c",
    "src/epx/relic_ep4_cmp.c",
    "src/epx/relic_ep4_curve.c",
    "src/epx/relic_ep4_dbl.c",
    "src/epx/relic_ep4_frb.c",
    "src/epx/relic_ep4_map.c",
    "src/epx/relic_ep4_mul.c",
    "src/epx/relic_ep4_mul_cof.c",
    "src/epx/relic_ep4_mul_fix.c",
    "src/epx/relic_ep4_mul_sim.c",
    "src/epx/relic_ep4_neg.c",
    "src/epx/relic_ep4_norm.c",
    "src/epx/relic_ep4_util.c",
    "src/epx/relic_ep8_add.c",
    "src/epx/relic_ep8_cmp.c",
    "src/epx/relic_ep8_curve.c",
    "src/epx/relic_ep8_dbl.c",
    "src/epx/relic_ep8_frb.c",
    "src/epx/relic_ep8_map.c",
    "src/epx/relic_ep8_mul.c",
    "src/epx/relic_ep8_mul_cof.c",
    "src/epx/relic_ep8_mul_fix.c",
    "src/epx/relic_ep8_mul_sim.c",
    "src/epx/relic_ep8_neg.c",
    "src/epx/relic_ep8_norm.c",
    "src/epx/relic_ep8_util.c",
    "src/fb/relic_fb_add.c",
    "src/fb/relic_fb_cmp.c",
    "src/fb/relic_fb_exp.c",
    "src/fb/relic_fb_inv.c",
    "src/fb/relic_fb_itr.c",
    "src/fb/relic_fb_mul.c",
    "src/fb/relic_fb_param.c",
    "src/fb/relic_fb_poly.c",
    "src/fb/relic_fb_rdc.c",
    "src/fb/relic_fb_shift.c",
    "src/fb/relic_fb_slv.c",
    "src/fb/relic_fb_sqr.c",
    "src/fb/relic_fb_srt.c",
    "src/fb/relic_fb_trc.c",
    "src/fb/relic_fb_util.c",
    "src/fbx/relic_fb2_inv.c",
    "src/fbx/relic_fb2_mul.c",
    "src/fbx/relic_fb2_slv.c",
    "src/fbx/relic_fb2_sqr.c",
    "src/fp/relic_fp_add.c",
    "src/fp/relic_fp_cmp.c",
    "src/fp/relic_fp_crt.c",
    "src/fp/relic_fp_exp.c",
    "src/fp/relic_fp_inv.c",
    "src/fp/relic_fp_mul.c",
    "src/fp/relic_fp_param.c",
    "src/fp/relic_fp_prime.c",
    "src/fp/relic_fp_rdc.c",
    "src/fp/relic_fp_shift.c",
    "src/fp/relic_fp_smb.c",
    "src/fp/relic_fp_sqr.c",
    "src/fp/relic_fp_srt.c",
    "src/fp/relic_fp_util.c",
    "src/fpx/relic_fp12_mul.c",
    "src/fpx/relic_fp12_sqr.c",
    "src/fpx/relic_fp16_mul.c",
    "src/fpx/relic_fp16_sqr.c",
    "src/fpx/relic_fp18_mul.c",
    "src/fpx/relic_fp18_sqr.c",
    "src/fpx/relic_fp24_mul.c",
    "src/fpx/relic_fp24_sqr.c",
    "src/fpx/relic_fp2_mul.c",
    "src/fpx/relic_fp2_sqr.c",
    "src/fpx/relic_fp3_mul.c",
    "src/fpx/relic_fp3_sqr.c",
    "src/fpx/relic_fp48_mul.c",
    "src/fpx/relic_fp48_sqr.c",
    "src/fpx/relic_fp4_mul.c",
    "src/fpx/relic_fp4_sqr.c",
    "src/fpx/relic_fp54_mul.c",
    "src/fpx/relic_fp54_sqr.c",
    "src/fpx/relic_fp6_mul.c",
    "src/fpx/relic_fp6_sqr.c",
    "src/fpx/relic_fp8_mul.c",
    "src/fpx/relic_fp8_sqr.c",
    "src/fpx/relic_fp9_mul.c",
    "src/fpx/relic_fp9_sqr.c",
    "src/fpx/relic_fpx_add.c",
    "src/fpx/relic_fpx_cmp.c",
    "src/fpx/relic_fpx_cyc.c",
    "src/fpx/relic_fpx_exp.c",
    "src/fpx/relic_fpx_field.c",
    "src/fpx/relic_fpx_frb.c",
    "src/fpx/relic_fpx_inv.c",
    "src/fpx/relic_fpx_pck.c",
    "src/fpx/relic_fpx_rdc.c",
    "src/fpx/relic_fpx_srt.c",
    "src/fpx/relic_fpx_util.c",
    "src/low/curve2251-sse/relic_fb_add_low.c",
    "src/low/curve2251-sse/relic_fb_inv_low.c",
    "src/low/curve2251-sse/relic_fb_itr_low.c",
    "src/low/curve2251-sse/relic_fb_mul_low.c",
    "src/low/curve2251-sse/relic_fb_mul_low_cl.c",
    "src/low/curve2251-sse/relic_fb_mul_low_ld.c",
    "src/low/curve2251-sse/relic_fb_mul_low_sf.c",
    "src/low/curve2251-sse/relic_fb_rdc_low.c",
    "src/low/curve2251-sse/relic_fb_slv_low.c",
    "src/low/curve2251-sse/relic_fb_sqr_low.c",
    "src/low/curve2251-sse/relic_fb_srt_low.c",
    "src/low/curve2251-sse/relic_fb_trc_low.c",
    "src/low/easy/relic_bn_add_low.c",
    "src/low/easy/relic_bn_div_low.c",
    "src/low/easy/relic_bn_mod_low.c",
    "src/low/easy/relic_bn_mul_low.c",
    "src/low/easy/relic_bn_shift_low.c",
    "src/low/easy/relic_bn_sqr_low.c",
    "src/low/easy/relic_fb_add_low.c",
    "src/low/easy/relic_fb_inv_low.c",
    "src/low/easy/relic_fb_itr_low.c",
    "src/low/easy/relic_fb_mul_low.c",
    "src/low/easy/relic_fb_rdc_low.c",
    "src/low/easy/relic_fb_shift_low.c",
    "src/low/easy/relic_fb_slv_low.c",
    "src/low/easy/relic_fb_sqr_low.c",
    "src/low/easy/relic_fb_srt_low.c",
    "src/low/easy/relic_fb_trc_low.c",
    "src/low/easy/relic_fp_add_low.c",
    "src/low/easy/relic_fp_inv_low.c",
    "src/low/easy/relic_fp_mul_low.c",
    "src/low/easy/relic_fp_rdc_low.c",
    "src/low/easy/relic_fp_shift_low.c",
    "src/low/easy/relic_fp_smb_low.c",
    "src/low/easy/relic_fp_sqr_low.c",
    "src/low/easy/relic_fpx_add_low.c",
    "src/low/easy/relic_fpx_mul_low.c",
    "src/low/easy/relic_fpx_rdc_low.c",
    "src/low/easy/relic_fpx_sqr_low.c",
    "src/low/gmp-sec/relic_bn_add_low.c",
    "src/low/gmp-sec/relic_bn_div_low.c",
    "src/low/gmp-sec/relic_bn_mod_low.c",
    "src/low/gmp-sec/relic_bn_mul_low.c",
    "src/low/gmp-sec/relic_bn_shift_low.c",
    "src/low/gmp-sec/relic_bn_sqr_low.c",
    "src/low/gmp-sec/relic_fp_add_low.c",
    "src/low/gmp-sec/relic_fp_inv_low.c",
    "src/low/gmp-sec/relic_fp_mul_low.c",
    "src/low/gmp-sec/relic_fp_rdc_low.c",
    "src/low/gmp-sec/relic_fp_shift_low.c",
    "src/low/gmp-sec/relic_fp_sqr_low.c",
    "src/low/gmp/relic_bn_add_low.c",
    "src/low/gmp/relic_bn_div_low.c",
    "src/low/gmp/relic_bn_mod_low.c",
    "src/low/gmp/relic_bn_mul_low.c",
    "src/low/gmp/relic_bn_shift_low.c",
    "src/low/gmp/relic_bn_sqr_low.c",
    "src/low/gmp/relic_fb_add_low.c",
    "src/low/gmp/relic_fb_shift_low.c",
    "src/low/gmp/relic_fp_add_low.c",
    "src/low/gmp/relic_fp_inv_low.c",
    "src/low/gmp/relic_fp_mul_low.c",
    "src/low/gmp/relic_fp_rdc_low.c",
    "src/low/gmp/relic_fp_shift_low.c",
    "src/low/gmp/relic_fp_smb_low.c",
    "src/low/gmp/relic_fp_sqr_low.c",
    "src/md/blake2s-ref.c",
    "src/md/relic_md_blake2s.c",
    "src/md/relic_md_hmac.c",
    "src/md/relic_md_kdf.c",
    "src/md/relic_md_sha224.c",
    "src/md/relic_md_sha256.c",
    "src/md/relic_md_sha384.c",
    "src/md/relic_md_sha512.c",
    "src/md/relic_md_xmd.c",
    "src/md/sha224-256.c",
    "src/md/sha384-512.c",
    "src/mpc/relic_mpc_mt.c",
    "src/mpc/relic_mpc_pc.c",
    "src/mpc/relic_mpc_sss.c",
    "src/pc/relic_pc_core.c",
    "src/pc/relic_pc_exp.c",
    "src/pc/relic_pc_util.c",
    "src/pp/relic_pp_add_k1.c",
    "src/pp/relic_pp_add_k12.c",
    "src/pp/relic_pp_add_k16.c",
    "src/pp/relic_pp_add_k18.c",
    "src/pp/relic_pp_add_k2.c",
    "src/pp/relic_pp_add_k24.c",
    "src/pp/relic_pp_add_k48.c",
    "src/pp/relic_pp_add_k54.c",
    "src/pp/relic_pp_add_k8.c",
    "src/pp/relic_pp_dbl_k1.c",
    "src/pp/relic_pp_dbl_k12.c",
    "src/pp/relic_pp_dbl_k16.c",
    "src/pp/relic_pp_dbl_k18.c",
    "src/pp/relic_pp_dbl_k2.c",
    "src/pp/relic_pp_dbl_k24.c",
    "src/pp/relic_pp_dbl_k48.c",
    "src/pp/relic_pp_dbl_k54.c",
    "src/pp/relic_pp_dbl_k8.c",
    "src/pp/relic_pp_exp_k1.c",
    "src/pp/relic_pp_exp_k12.c",
    "src/pp/relic_pp_exp_k16.c",
    "src/pp/relic_pp_exp_k18.c",
    "src/pp/relic_pp_exp_k2.c",
    "src/pp/relic_pp_exp_k24.c",
    "src/pp/relic_pp_exp_k48.c",
    "src/pp/relic_pp_exp_k54.c",
    "src/pp/relic_pp_exp_k8.c",
    "src/pp/relic_pp_map.c",
    "src/pp/relic_pp_map_k1.c",
    "src/pp/relic_pp_map_k12.c",
    "src/pp/relic_pp_map_k16.c",
    "src/pp/relic_pp_map_k18.c",
    "src/pp/relic_pp_map_k2.c",
    "src/pp/relic_pp_map_k24.c",
    "src/pp/relic_pp_map_k48.c",
    "src/pp/relic_pp_map_k54.c",
    "src/pp/relic_pp_map_k8.c",
    "src/pp/relic_pp_norm.c",
    "src/rand/relic_rand_call.c",
    "src/rand/relic_rand_hashd.c",
    "src/rand/relic_rand_udev.c",
    "src/relic_bench.c",
    "src/relic_conf.c",
    "src/relic_core.c",
    "src/relic_err.c",
    "src/relic_test.c",
    "src/relic_util.c",
};
fn config(b: *std.Build, version: std.SemanticVersion, target: std.zig.CrossTarget) *std.Build.Step.ConfigHeader {
    return b.addConfigHeader(.{
        .style = .{ .cmake = .{ .path = "include/relic_conf.h.in" } },
        .include_path = "relic_conf.h",
    }, .{
        .RLC_VERSION = b.fmt("{}.{}.{}", .{ version.major, version.minor, version.patch }),
        .DEBUG = {},
        .PROFL = {},
        .CHECK = {},
        .VERBS = {},
        .OVERH = {},
        .DOCUM = {},
        .STRIP = {},
        .QUIET = {},
        .COLOR = {},
        .BIGED = {},
        .SHLIB = {},
        .STLIB = {},
        .RLC_WIDTH = 4,
        .RLC_DEPTH = 5,
        .TESTS = 100,
        .BENCH = 100,
        .CORES = 1,
        .AVR = 1,
        .MSP = 2,
        .ARM = 3,
        .A64 = 4,
        .X86 = 5,
        .X64 = 6,
        .ARCH = setOpArch(target),
        .WSIZE = @sizeOf(usize),
        .ALIGN = 1,
        .WITH_BN = {},
        .WITH_FP = {},
        .WITH_FPX = {},
        .WITH_FB = {},
        .WITH_EP = {},
        .WITH_EPX = {},
        .WITH_EB = {},
        .WITH_ED = {},
        .WITH_EC = {},
        .WITH_PP = {},
        .WITH_PC = {},
        .WITH_BC = {},
        .WITH_MD = {},
        .WITH_CP = {},
        .WITH_MPC = {},
        .EASY = 1,
        .GMP = 2,
        .GMP_SEC = 3,
        .ARITH = .EASY,
        .BN_PRECI = 1024,
        .SINGLE = 0,
        .CARRY = 1,
        .DOUBLE = 2,
        .BN_MAGNI = .DOUBLE,
        .BN_KARAT = 0,
        .BASIC = 1,
        .COMBA = 2,
        .BN_MUL = .COMBA,
        .BN_SQR = .COMBA,
        .BARRT = 2,
        .MONTY = 3,
        .PMERS = 4,
        .BN_MOD = .MONTY,
        .BN_MXP = .SLIDE,
        .BINAR = 2,
        .LEHME = 3,
        .BN_GCD = .BASIC,
        .SAFEP = 2,
        .STRON = 3,
        .BN_GEN = .BASIC,
        .BN_METHD = "COMBA;COMBA;MONTY;SLIDE;BASIC;BASIC",
        .FP_PRIME = 256,
        .FP_KARAT = 0,
        .FP_PMERS = {},
        .FP_QNRES = {},
        .INTEG = 3,
        .FP_ADD = .INTEG,
        .MULTP = 4,
        .FP_MUL = .INTEG,
        .FP_SQR = .INTEG,
        .FP_RDC = .MONTY,
        .EXGCD = 4,
        .DIVST = 5,
        .JMPDS = 6,
        .LOWER = 8,
        .FP_INV = .MONTY,
        .FP_SMB = .JMPDS,
        .FP_EXP = .SLIDE,
        .FP_METHD = "INTEG;INTEG;INTEG;MONTY;MONTY;JMPDS;SLIDE",
        .FPX_QDR = .INTEG,
        .FPX_CBC = .INTEG,
        .FPX_RDC = .LAZYR,
        .FPX_METHD = "INTEG;INTEG;LAZYR",
        .FB_POLYN = 283,
        .FB_KARAT = 0,
        .FB_TRINO = {},
        .FB_SQRTF = {},
        .FB_PRECO = {},
        .FB_MUL = .LODAH,
        .QUICK = 2,
        .FB_SQR = .QUICK,
        .FB_RDC = .QUICK,
        .FB_SRT = .QUICK,
        .FB_TRC = .QUICK,
        .FB_SLV = .QUICK,
        .ALMOS = 3,
        .ITOHT = 5,
        .BRUCH = 6,
        .CTAIA = 7,
        .FB_INV = .EXGCD,
        .SLIDE = 2,
        .FB_EXP = .SLIDE,
        .FB_ITR = .QUICK,
        .FB_METHD = "LODAH;QUICK;QUICK;QUICK;QUICK;QUICK;EXGCD;SLIDE;QUICK",
        .EP_PLAIN = {},
        .EP_SUPER = {},
        .EP_ENDOM = {},
        .EP_MIXED = {},
        .EP_PRECO = {},
        .EP_CTMAP = {},
        .JACOB = 3,
        .EP_ADD = .PROJC,
        .LWNAF = 4,
        .LWREG = 5,
        .EP_MUL = .LWNAF,
        .EP_FIX = .COMBS,
        .EP_SIM = .INTER,
        .SSWUM = 2,
        .SWIFT = 3,
        .EP_MAP = .SSWUM,
        .EP_METHD = "PROJC;LWNAF;COMBS;INTER;SSWUM",
        .EB_PLAIN = {},
        .EB_KBLTZ = {},
        .EB_MIXED = {},
        .EB_PRECO = {},
        .EB_METHD = "PROJC;LWNAF;COMBS;INTER",
        .PROJC = 2,
        .EB_ADD = .PROJC,
        .LODAH = 2,
        .HALVE = 3,
        .RWNAF = 5,
        .EB_MUL = .LWNAF,
        .COMBS = 2,
        .COMBD = 3,
        .EB_FIX = .COMBS,
        .EB_SIM = .INTER,
        .ED_PRECO = {},
        .ED_METHD = "PROJC;LWNAF;COMBS;INTER",
        .EXTND = 3,
        .JOINT = 4,
        .ED_ADD = .PROJC,
        .ED_MUL = .LWNAF,
        .ED_FIX = .COMBS,
        .TRICK = 2,
        .INTER = 3,
        .ED_SIM = .INTER,
        .PRIME = 1,
        .CHAR2 = 2,
        .EDDIE = 3,
        .EC_CUR = .PRIME,
        .EC_METHD = "PRIME",
        .EC_ENDOM = null,
        .LAZYR = 2,
        .PP_EXT = .LAZYR,
        .PP_METHD = "LAZYR;OATEP",
        .TATEP = 1,
        .WEILP = 2,
        .OATEP = 3,
        .PP_MAP = .OATEP,
        .SH224 = 2,
        .SH256 = 3,
        .SH384 = 4,
        .SH512 = 5,
        .B2S160 = 6,
        .B2S256 = 7,
        .MD_MAP = .SH256,
        .MD_METHD = "SH256",
        .CP_CRT = {},
        .PKCS1 = 2,
        .PKCS2 = 3,
        .CP_RSAPD = .PKCS2,
        .AUTO = 1,
        .DYNAMIC = 2,
        .ALLOC = .AUTO,
        .HASHD = 1,
        .UDEV = 3,
        .RDRND = 2,
        .CALL = 4,
        .RAND = .HASHD,
        .LIBC = 1,
        .WCGR = 4,
        .SEED = .UDEV,
        .LINUX = 1,
        .FREEBSD = 2,
        .MACOSX = 3,
        .WINDOWS = 4,
        .DROID = 5,
        .DUINO = 6,
        .NETBSD = 7,
        .OPSYS = setOpSys(target),
        .OPENMP = 1,
        .PTHREAD = 2,
        .MULTI = null,
        .HREAL = 1,
        .HPROC = 2,
        .HTHRD = 3,
        .POSIX = 4,
        .ANSI = 5,
        .CYCLE = 6,
        .PERF = 7,
        .TIMER = .ANSI,
        .LABEL = null,
    });
}
fn setOpSys(target: std.zig.CrossTarget) i64 {
    return switch (target.getOsTag()) {
        .linux => 1,
        .freebsd => 2,
        .macos => 3,
        .windows => 4,
        .freestanding => 6,
        .netbsd => 7,
        else => 5,
    };
}
fn setOpArch(target: std.zig.CrossTarget) i64 {
    return switch (target.getCpuArch()) {
        .avr => 1,
        .msp430 => 2,
        .arm => 3,
        .aarch64 => 4,
        .x86 => 5,
        .x86_64 => 6,
        else => 0,
    };
}
